create table ALR
(
sl_no int,
agent_name string,
dat string,
login string,
logout string,
duration string
)
row format delimited 
fields terminated by ','
tblproperties("skip.header.line.count" = "1");

load data local inpath 'file:////config/workspace/AgentLogingReport.csv' into table ALR;

create table AP
(
sl_no int,
dat string,
agent_name string,
total_chats int,
avg_response string,
avg_resolution string,
avg_rating float,
tot_feedback int
)
row format delimited 
fields terminated by ','
tblproperties("skip.header.line.count" = "1");

load data local inpath 'file:////config/workspace/AgentPerformance.csv' into table AP;

3. List of all agents' names. 

select agent_name from AP;

4. Find out agent average rating.

select agent_name,avg(avg_rating) from AP group by agent_name;


5. Total working days for each agents 

select agent_name, count(dat) from AP group by agent_name;


6. Total query that each agent have taken 

select agent_name,count(total_chats) from AP group by agent_name;


7. Total Feedback that each agent have received 

select agent_name,count(tot_feedback) from AP group by agent_name;


8. Agent name who have average rating between 3.5 to 4 

select agent_name from AP where avg_rating between 3.5 and 4;

9. Agent name who have rating less than 3.5 

select agent_name from AP where avg_rating < 3.5;

10. Agent name who have rating more than 4.5 

select agent_name from AP where avg_rating > 4.5;

11. How many feedback agents have received more than 4.5 average

select agent_name from AP group by agent_name having avg(tot_feedback) > 4.5;

12. average weekly response time for each agent 

select 
agent_name, from_unixtime( cast(sum(unix_timestamp(avg_response,'HH:mm:ss'))/7 as bigint),'HH:mm:ss') 
as avg_res from AP group by agent_name limit 10;


13. average weekly resolution time for each agents 

select 
agent_name, from_unixtime( cast(sum(unix_timestamp(avg_resolution,'HH:mm:ss'))/7 as bigint),'HH:mm:ss') 
as avg_res from AP group by agent_name limit 10;

14. Find the number of chat on which they have received a feedback 

select count(total_chats) from AP where tot_feedback > 0;

15. Total contribution hour for each and every agents weekly basis 

select agent_name,from_unixtime(cast(sum(unix_timestamp(duration,'HH:mm:ss'))/7 as bigint),'HH')
as avg_cont from ALR group by agent_name limit 10;

16. Perform inner join, left join and right join based on the agent column and after joining the table export that data into your local system.

select * from AP inner join ALR on AP.agent_name = ALR.agent_name; //inner join

select * from AP left outer join ALR on AP.agent_name = ALR.agent_name; //left outer join

select * from AP right outer join ALR on AP.agent_name = ALR.agent_name; //right outer join


17. Perform partitioning on top of the agent column and then on top of that perform bucketing for each partitioning.

create table buck_alr
(
sl_no int,
dat string,
login string,
logout string,
duration string
)
partitioned by (agent_name string)
clustered by (sl_no)
sorted by (sl_no)
into 2 buckets;

insert overwrite table buck_alr partition(agent_name) select sl_no,dat,login,logout,duration,agent_name
from alr;

create table buck_ap
(
sl_no int,
dat string,
total_chats int,
avg_response string,
avg_resolution string,
avg_rating float,
tot_feedback int
)
partitioned by (agent_name string)
clustered by (sl_no)
sorted by (sl_no)
into 2 buckets;

insert overwrite table buck_alr partition(agent_name) select sl_no,dat,total_chats,
avg_response,avg_resolution,avg_rating,tot_feedback,agent_name
from ap;

